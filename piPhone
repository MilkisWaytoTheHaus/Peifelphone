
/* -------------------------------------------------- *
 _____  _          _____   _                          *
|  __ \(_)        |  __ \ | |                         *
| |__) |_  ______ | |__) || |__    ___   _ __    ___  *
|  ___/| ||______||  ___/ | '_ \  / _ \ | '_ \  / _ \ *
| |    | |        | |     | | | || (_) || | | ||  __/ *
|_|    |_|        |_|     |_| |_| \___/ |_| |_| \___| *
----------------------------------------------------- *                                                     
* Project:        Pi-Phone                            *
* Team:           Alexander Hausmann & Ilka Salomon   *
* Creation date:  07.05.2018                          *
* Current state:  11.05.2018                          *
----------------------------------------------------- */

// INCLUDES
#include <wiringPi.h>       // Source: https://github.com/WiringPi/WiringPi/blob/master/wiringPi/wiringPi.h
#include <wiringSerial.h>   // Source: https://github.com/WiringPi/WiringPi/blob/master/wiringPi/wiringSerial.h
#include <string.h>
// --

// DEFINES
// -> General
  #define LOOP while(1)
  #define BAUDRATE 9600
// -> GSM-Modem
  //     Name    Pin-Number (WiringPi)   Pin-Number (Physical)
  #define NET             28          //         20/38
  #define RST             27          //         16/36
  //define RXT                                   USB D+ 
  //define TXD                                   USB D-
  #define RING            29          //         21/40              
  //#define DTR                                 USB DTR
  //#define MICP                                  GSM     
  //#define MICN                                  GSM        
  //#define SPKP                                  GSM       
  //#define SPKN                                  GSM        
// --

// FUNCTION PROTOTYPES
 void sendAT();
 void writeSMS ();
 void readSMS ();
// --

// MAIN PROGRAM ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
void main () {

  // VARIABLES
  // -> For Serial Functions
    int fd; 
    char answer[20];
    char message[100];
    char number[14];
    char tdstring[120];
  
  // -- End Variables
  
  // SETUP
  // -> Pins                      
    pinMode (NET, INPUT);   // Network State ??
    pinMode (RST, OUTPUT);  // Reset ??
    pinMode (RXT, INPUT);   // Recieve Data
    pinMode (TXD, OUTPUT);  // Transmit Data
    pinMode (RING, INPUT);  // Ring ??
    pinMode (DTR, INPUT);   // Data Terminal Ready
    pinMode (MICP, INPUT);  // '\ Differential Audio 
    pinMode (MICN, INPUT);  // ,/ Input
    pinMode (SPKP, OUTPUT); // '\ Differential Audio
    pinMode (SPKN, OUTPUT); // ,/ Output
  // -> Serial
                      // USB !!!!
    fd = serialOpen ("/dev/ttyAMA0", BAUDRATE); // Start Serial Communication
    wiringPiSetup ();                           // Wiring Pi Setup
  // -- End Setup
  
  // FOREVER-LOOP
  LOOP {
    // SMS (WRITE) ---
    
    message = strcpy(message, "Hello World");  // TE
    number = strcpy(number, "+491781982364");  // ST
    
    serialPuts(fd, "AT+CMGF=1");                                 // Sets the GSM-Modem in SMS Text Mode 
    answer = serialGetchar(fd);                                  // Get answer of GSM-Modem
    if (answer == "OK") {                                        // Answer is "OK"?
     strcpy (tdstring, "AT+CMGS=\"");                            // Make tdString -> Start String
     strcat (tdsting", number);                                  // .. -> Number of Receiver
     strcat (tdstring, \">);                                     // .. -> String after Number
     strcat (tdstring, message);                                 // .. -> Message to Receiver
     strcat (tdstring, ><CTRL-Z>");                              // .. -> End String
     serialPuts(fd, tdstring);                                   // Sends Message
    }
    // -- End Sms (Write)
    
    // SMS (READ) ---
    
    
    
    // -- End Sms (Read)
    
    
  }
  // -- End Loop
}
// -- End Main ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// sendAT ----------------------------------------------------------
void sendAT (int fd, char AT_Command [150]) {
 serialPuts(fd,AT_Command);
}
// -- End sendAT ---------------------------------------------------

// recieveAT -------------------------------------------------------
void receiveAT (int fd, char AT_Command [150], int AT_Information) {
  AT_Command = serialGetchar(fd);
  if (AT_Command [0] == "O" && AT_Command [1] == "1")
}
// - End receiveAT --------------------------------------------------
// SMS WRITE --------------------------------------------------------
void writeSMS  () {
/* Protokoll:
   AT                       // Test Connection to GSM-Modem
   -> OK                          
   AT+CPIN = "xxxx"         // Input PIN
   -> OK            
   -> +CPIN: READY          // *LED pulses 3000 ms Rhythm*
   -> Call Ready
   -> SMS Ready
   AT+CMGF=1                // Set SMS Text Format
   -> OK
   AT+CMGS="xxxxxxxxxxxxx"    // Set Number of Receiver
   > blabla                 // Set Text
   > <CTRL-Z>               // Set End of SMS
   -> +CGMS: x
   -> OK
*/


} -- End writeSMS ---------------------------------------------------

// SMS READ --------------------------------------------------------
void readSMS  () {
/* Protokoll:
   -> +CMTI: "SM",3         // Received SMS, saved to Mem 3
   AT+CMGR = 3              // Readout SMS on Mem 3
   -> +CMGR: "REC UNREAD","xxxxxxxxxxxxx","","xx/xx/xx,xx:xx:xx+xx"
   -> blabla
   -> OK
*/


} -- End readSMS ---------------------------------------------------
