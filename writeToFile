// Read and Write contacts to a .dat file

#include <stdio.h>
#include <stdlib.h>

#define CONTACTFILE "contacts.dat"
#define TMP "tmp.dat"

typedef struct {
char namef[30];
char names[30];
char number[14];
} cont;


int main () {
	
	// Variables
	FILE *contacts;		
	FILE *helpFile;
	cont activeContact;
	char buff[1000];
	int a;					// for choosing options
	int i;					// counter
	
	printf(" What do you want to do?\n -1- for write a new Contact\n -2- for read all Contacts\n -3- for read specific Contact (search for contact number)\n -4- for delete specific Contact (search for contact number)\n\n -> ");
	scanf("%i", &a);
	system("cls");
	printf("\n C O N T A C T S\n --------------------------------------\n\n");
	
	switch (a) {
		// WRITE --------------------------------------------------------------------
		case 1:	
			// open File
			contacts = fopen(CONTACTFILE, "a+b"); // open contact File in read - write - append mode
			if( NULL == contacts ) {
				printf("ERROR!");
			} else {	
				// get Information from user
				printf (" Your first name:\t");
				scanf ("%s", &(activeContact.namef));
				fflush(stdin);
				printf (" Your second name:\t");
				scanf ("%s", &(activeContact.names));
				fflush(stdin);
				printf (" Your number:\t\t");
				scanf ("%s", &(activeContact.number));
				
				// write to File
				fseek(contacts, 0, SEEK_END);
				fwrite(&activeContact, sizeof(cont), 1, contacts);
				
				//close File
				fclose(contacts);
			}
			break;
		// READ ---------------------------------------------------------------------
		case 2:
			// open File
			contacts = fopen(CONTACTFILE, "r+b"); // open contact File in read - write - append mode
			if( NULL == contacts ) {
				printf("ERROR!");
			} else {	
				i = 1;
				while(fread(&activeContact, sizeof(cont), 1, contacts) == 1) {
					printf(" Contact Nr. %i:\n", i);
					printf("   First Name:\t%s\n", activeContact.namef);
					printf("   Second Name:\t%s\n", activeContact.names);
					printf("   Number:\t%s\n\n", activeContact.number);
					printf(" --------------------------------------\n\n");
					i++;
				}
				
				//close File
				fclose(contacts);
			}
			break;
		case 3:
			printf(" Which Contact do you want to read?");
			scanf("%i", &a);
			system("cls");
			printf("\n C O N T A C T S\n --------------------------------------\n\n");
			contacts = fopen(CONTACTFILE, "r+b"); // open contact File in read - write - append mode
			if( NULL == contacts ) {
				printf("ERROR!");
			} else {
				fseek(contacts, (a-1)*sizeof(cont), SEEK_SET);	
				fread(&activeContact, sizeof(cont), 1, contacts);
				printf(" First Name:\t%s\n", activeContact.namef);
				printf(" Second Name:\t%s\n", activeContact.names);
				printf(" Number:\t%s\n\n", activeContact.number);
				printf(" --------------------------------------\n\n");
				
				//close File
				fclose(contacts);
			}
			break;
		case 4:
			printf(" Which Contact do you want to delete?");
			scanf("%i", &a);
			system("cls");
			printf("\n C O N T A C T S\n --------------------------------------\n\n");
		   	helpFile = fopen(TMP, "a+b");		// tmp file
		   	if( NULL == helpFile
			    ) {
				printf("ERROR!");
			} else {
			   	contacts = fopen(CONTACTFILE, "r+b"); // open contact File in read - write - append mode
				if( NULL == contacts ) {
					printf("ERROR!");
				} else {
					i = 1;
					while(fread(&activeContact, sizeof(cont), 1, contacts) == 1 && i < a) {
						fwrite(&activeContact, sizeof(cont), 1, helpFile);	// move to tmp file
						i++;
					}	// don't move file that will be deleted
					while(fread(&activeContact, sizeof(cont), 1, contacts) == 1) {
						fwrite(&activeContact, sizeof(cont), 1, helpFile);	// move to tmp file
					}
					
					// close files
					fclose(contacts);
				   	fclose(helpFile);
				   	
				   	// organize tmp file and origin file
				   	remove(CONTACTFILE);        // remove original File
				   	rename(TMP, CONTACTFILE);   // rename tmp File 	
				}
			}
			break;
	}	
	return 0;
}
